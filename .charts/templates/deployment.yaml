apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.service.name }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.service.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.service.name }}
        version: "{{ .Values.image.tag }}"
    spec:
      imagePullSecrets:
      - name: {{ .Values.image.registrySecret }}
      containers:
      - name: {{ .Values.service.name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        resources:
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        {{- range $k, $v := .Values.env }}
          - name: {{ $k }}
            value: {{ $v | quote }}
        {{- end }}
        {{- $serviceName := .Values.service.name }}
        {{- range $k, $v := .Values.secret }}
          - name: {{ $k }}
            valueFrom:
              secretKeyRef:
                name: {{ $serviceName }}
                key: {{ $k }}
        {{- end }}
        ports:
          - name: http
            containerPort: {{ .Values.service.internalPort }}
        livenessProbe:
          httpGet:
            path: /health
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: 5
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: 5
          periodSeconds: 10